--저장 프로시저 생성하기
CREATE OR REPLACE PROCEDURE DEL_ALL
IS
BEGIN
DELETE FROM EMP01;
END;
/
--실행
EXECUTE DEL_ALL ;
SELECT * FROM EMP01;
--파라미터 값을 이용한 저장프로시저
CREATE OR REPLACE PROCEDURE
DEL_ENAME(VENAME EMP01.ENAME%TYPE)
IS
BEGIN
DELETE FROM EMP01 WHERE ENAME=VENAME;
END;
/ 
EXECUTE DEL_ENAME('SMITH'); 
--IN OUT 매개변수
--반환값이 여러개일때 
CREATE OR REPLACE PROCEDURE SEL_EMPNO
( VEMPNO IN EMP.EMPNO%TYPE,
 VENAME OUT EMP.ENAME%TYPE,
 VSAL OUT EMP.SAL%TYPE,
 VJOB OUT EMP.JOB%TYPE,
 VDEPTNO OUT EMP.DEPTNO%TYPE,
 VDNAME OUT DEPT.DNAME%TYPE
)
IS
BEGIN
SELECT ENAME,SAL,JOB,EMP.DEPTNO,DNAME 
INTO VENAME,VSAL,VJOB,VDEPTNO,VDNAME 
FROM EMP,DEPT
WHERE EMPNO=VEMPNO AND EMP.DEPTNO=DEPT.DEPTNO;
END;
/
--바인드 변수
VARIABLE VAR_ENAME VARCHAR2(15);
VARIABLE VAR_SAL NUMBER;
VARIABLE VAR_JOB VARCHAR2(9);
VARIABLE VAR_DEPTNO NUMBER; 
VARIABLE VAR_DNAME VARCHAR2(15); 
EXECUTE SEL_EMPNO(7788, :VAR_ENAME, :VAR_SAL, :VAR_JOB, :VAR_DEPTNO, :VAR_DNAME)
PRINT VAR_DEPTNO;
--저장 함수
--반환값이 1개일 경우 사용
CREATE OR REPLACE FUNCTION CAL_BONUS(
 VEMPNO IN EMP.EMPNO%TYPE,VJOB OUT EMP.JOB%TYPE )
 RETURN NUMBER
IS
 VSAL NUMBER(7, 2);
BEGIN
 SELECT SAL,JOB INTO VSAL,VJOB
 FROM EMP
 WHERE EMPNO = VEMPNO;

 RETURN (VSAL * 200);
END;
/ 
VARIABLE VAR_RES NUMBER; 
VARIABLE VAR_JOB VARCHAR2(15); 
EXECUTE :VAR_RES := CAL_BONUS(7788, :VAR_JOB); 
PRINT VAR_JOB;